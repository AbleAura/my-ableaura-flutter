name: iOS Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'
          channel: 'stable'
          cache: true

      - name: Setup Xcode and Tools
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          echo "Installing CocoaPods..."
          sudo gem install cocoapods -v 1.15.2

      - name: Setup environment
        run: |
          flutter --version
          flutter doctor -v
          flutter precache --ios

      - name: Create environment files
        env:
          DEV_ENV: ${{ secrets.DEV_ENV_FILE }}
          PROD_ENV: ${{ secrets.PROD_ENV_FILE }}
        run: |
          mkdir -p assets
          echo "$DEV_ENV" > assets/.env.dev
          echo "$PROD_ENV" > assets/.env.prod

      - name: Clean project and CocoaPods
        run: |
          flutter clean
          cd ios
          rm -rf Pods
          rm -rf Podfile.lock
          pod cache clean --all
          pod deintegrate
          cd ..

      - name: Create temporary Flutter project and Rebuild iOS
        run: |
          # Remove and recreate ios folder
          rm -rf ios
          flutter create --platforms ios --project-name my_ableaura_flutter .
          flutter pub get
          
          # Ensure Flutter.podspec is available and build iOS framework
          mkdir -p ios/Flutter
          flutter build ios-framework --xcframework --no-universal
          
          # Create symbolic link to Flutter framework
          mkdir -p ios/Flutter/Debug
          mkdir -p ios/Flutter/Release
          ln -sf ../../build/ios/framework/Debug/Flutter.xcframework ios/Flutter/Debug/Flutter.framework
          ln -sf ../../build/ios/framework/Release/Flutter.xcframework ios/Flutter/Release/Flutter.framework

      - name: Update Podfile and Install CocoaPods
        run: |
          # Update Podfile with correct iOS version and automatic code signing
          cat << EOF > ios/Podfile
          platform :ios, '12.0'

          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          project 'Runner', 'Release' => :release, 'Profile' => :release, 'Debug' => :debug

          def flutter_root
            generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
            unless File.exist?(generated_xcode_build_settings_path)
              raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
            end

            File.foreach(generated_xcode_build_settings_path) do |line|
              matches = line.match(/FLUTTER_ROOT\=(.*)/)
              return matches[1].strip if matches
            end
            raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}"
          end

          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

          flutter_ios_podfile_setup

          target 'Runner' do
            platform :ios, '12.0'

            use_frameworks!
            use_modular_headers!

            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

            post_install do |installer|
              installer.pods_project.targets.each do |target|
                target.build_configurations.each do |config|
                  config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
                  config.build_settings['CODE_SIGN_STYLE'] = 'Automatic'
                  config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= '$(inherited)'
                  config.build_settings['FRAMEWORK_SEARCH_PATHS'] << ' $(FLUTTER_ROOT)/bin/cache/artifacts/engine/ios'
                end
              end
            end
          end
          EOF

          # Install CocoaPods
          cd ios
          pod install --repo-update
          cd ..

      - name: Install provisioning profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          PP_PATH=$RUNNER_TEMP/profile.mobileprovision
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode > $PP_PATH
          UUID=$(/usr/libexec/PlistBuddy -c "Print UUID" /dev/stdin <<< $(security cms -D -i $PP_PATH))
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
          echo "PROVISIONING_PROFILE_SPECIFIER=$UUID" >> $GITHUB_ENV

      - name: Build iOS
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          BUNDLE_ID: ${{ secrets.BUNDLE_ID }}
        run: |
          flutter build ios --release --no-codesign
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -archivePath $RUNNER_TEMP/Runner.xcarchive \
            clean archive \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER"

      - name: Export IPA
        env:
          EXPORT_OPTIONS_PLIST_BASE64: ${{ secrets.EXPORT_OPTIONS_PLIST_BASE64 }}
        run: |
          EXPORT_OPTIONS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST_BASE64" | base64 --decode > $EXPORT_OPTIONS_PATH
          
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/Runner.xcarchive \
            -exportOptionsPlist $EXPORT_OPTIONS_PATH \
            -exportPath $RUNNER_TEMP/build

      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: release-ipa
          path: ${{ runner.temp }}/build/*.ipa
          retention-days: 5

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: |
            ios/build/
            build/ios/
            ${{ runner.temp }}/Runner.xcarchive/
          retention-days: 5
